#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>


#define ______ &trans
#define xxxxxx &none

#define DVORAKP 0
#define KEYPAD 1
#define FN 2
#define MOD 3


/ {
    behaviors {
        #include "macros.dtsi"
        #include "version.dtsi"
        #ifndef VERSION_MACRO
        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };
        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        gpipe: grave_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "grave_pipe";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&kp PIPE>;
            mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
        };
        ppipe: pipe_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "pipe_pipe";
            #binding-cells = <0>;
            bindings = <&kp PIPE>, <&kp PIPE>;
            mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
        };
        pkp_n1: plus_kp_n1 {
            compatible = "zmk,behavior-mod-morph";
            label = "plus_kp_n1";
            #binding-cells = <0>;
            bindings = <&kp PLUS>, <&kp KP_N1>;
            mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
        };
        lkp_n2: left_bracket_kp_n2 {
            compatible = "zmk,behavior-mod-morph";
            label = "left_bracket_kp_n2";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp KP_N2>;
            mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
        };
        lkp_n3: left_brace_kp_n3 {
            compatible = "zmk,behavior-mod-morph";
            label = "left_brace_kp_n3";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE>, <&kp KP_N3>;
            mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
        };
        lkp_n4: left_parenthesis_kp_n4 {
            compatible = "zmk,behavior-mod-morph";
            label = "left_parenthesis_kp_n4";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp KP_N4>;
            mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
        };
        akp_n5: amps_kp_n5 {
            compatible = "zmk,behavior-mod-morph";
            label = "amps_kp_n5";
            #binding-cells = <0>;
            bindings = <&kp AMPS>, <&kp KP_N5>;
            mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
        };
        ekp_n6: equal_kp_n6 {
            compatible = "zmk,behavior-mod-morph";
            label = "equal_kp_n6";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>, <&kp KP_N6>;
            mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
        };
        rkp_n7: right_parenthesis_kp_n7 {
            compatible = "zmk,behavior-mod-morph";
            label = "right_parenthesis_kp_n7";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp KP_N7>;
            mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
        };
        rkp_n8: right_brace_kp_n8 {
            compatible = "zmk,behavior-mod-morph";
            label = "right_brace_kp_n8";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACE>, <&kp KP_N8>;
            mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
        };
        rkp_n9: right_bracket_kp_n9 {
            compatible = "zmk,behavior-mod-morph";
            label = "right_bracket_kp_n9";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACKET>, <&kp KP_N9>;
            mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
        };
        skp_n0: star_kp_n0 {
            compatible = "zmk,behavior-mod-morph";
            label = "star_kp_n0";
            #binding-cells = <0>;
            bindings = <&kp STAR>, <&kp KP_N0>;
            mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
        };
        eprcnt: excl_prcnt {
            compatible = "zmk,behavior-mod-morph";
            label = "excl_prcnt";
            #binding-cells = <0>;
            bindings = <&kp EXCL>, <&kp PRCNT>;
            mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
        };
        dgrave: dllr_grave {
            compatible = "zmk,behavior-mod-morph";
            label = "dllr_grave";
            #binding-cells = <0>;
            bindings = <&kp DLLR>, <&kp GRAVE>;
            mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
        };
        dtilde: dllr_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "dllr_tilde";
            #binding-cells = <0>;
            bindings = <&kp DLLR>, <&kp TILDE>;
            mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
        };
        ggrave: grave_grave {
            compatible = "zmk,behavior-mod-morph";
            label = "grave_grave";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&kp GRAVE>;
            mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
        };
        pgrave: pipe_grave {
            compatible = "zmk,behavior-mod-morph";
            label = "pipe_grave";
            #binding-cells = <0>;
            bindings = <&kp PIPE>, <&kp GRAVE>;
            mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
        };
        bhash: bslh_hash {
            compatible = "zmk,behavior-mod-morph";
            label = "bslh_hash";
            #binding-cells = <0>;
            bindings = <&kp BSLH>, <&kp HASH>;
            mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
        };
        acaret: at_caret {
            compatible = "zmk,behavior-mod-morph";
            label = "at_caret";
            #binding-cells = <0>;
            bindings = <&kp AT>, <&kp CARET>;
            mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        dvorak_prog {
            bindings = <
                &pgrave    &pkp_n1   &lkp_n2    &lkp_n3   &lkp_n4    &akp_n5       &tog KEYPAD                                                &mo MOD    &ekp_n6  &rkp_n7  &rkp_n8   &rkp_n9   &skp_n0  &eprcnt
                &kp TAB    &kp SEMI  &kp COMMA  &kp DOT   &kp P      &kp Y         ______                                                     ______     &kp F    &kp G    &kp C     &kp R     &kp L    &bhash
                &kp ESC    &kp A     &kpT O     &kp E     &kp U      &kp I         ______       &kp LCTRL  &kp LGUI     &kp LGUI   &kp RCTRL  ______     &kp D    &kp H    &kp T     &kp N     &kp S    &kp MINUS
                &kp LSHFT  &kp SQT   &kp Q      &kp J     &kp K      &kp X                                 &kp HOME     &kp PG_UP                        &kp B    &kp M    &kp W     &kp V     &kp Z    &kp RSHFT
                &mo FN     &dtilde   &kp CAPS   &kp LEFT  &kp RIGHT                &kp BSPC     &kp DEL    &kp END      &kp PG_DN  &kp ENTER  &kp SPACE           &kp UP   &kp DOWN  &kp FSLH  &acaret  &mo FN
            >;
        };

        keypad {
            bindings = <
                ______  ______  ______  ______  ______  ______  ______                                      ______     ______  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  ______
                ______  ______  ______  ______  ______  ______  ______                                      ______     ______  &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     ______
                ______  ______  ______  ______  ______  ______  ______  ______  ______      ______  ______  ______     ______  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      ______
                ______  ______  ______  ______  ______  ______                  ______      ______                     ______  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     ______
                ______  ______  ______  ______  ______          ______  ______  ______      ______  ______  &kp KP_N0          ______      ______        &kp KP_DOT     ______           ______
            >;
        };

        fn {
            bindings = <
                &kp F1  &kp F2  &kp F3     &kp F4  &kp F5  &kp F6  ______                                      ______  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
                ______  ______  ______     ______  ______  ______  xxxxxx                                      xxxxxx  ______  ______  ______  ______   ______   ______
                ______  ______  ______     ______  ______  ______  xxxxxx  ______  ______      ______  ______  xxxxxx  ______  ______  ______  ______   ______   ______
                ______  ______  ______     ______  ______  ______                  ______      ______                  ______  ______  ______  ______   ______   ______
                ______  ______  &kp K_APP  ______  ______          ______  ______  ______      ______  ______  ______          ______  ______  ______   ______   ______
            >;
        };

        mod {
            bindings = <
                xxxxxx  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  xxxxxx                                                                   ______       xxxxxx  xxxxxx      xxxxxx      xxxxxx      xxxxxx  xxxxxx
                xxxxxx  xxxxxx        xxxxxx        xxxxxx        xxxxxx        xxxxxx        &bootloader                                                              &bootloader  xxxxxx  xxxxxx      xxxxxx      xxxxxx      xxxxxx  xxxxxx
                xxxxxx  xxxxxx        xxxxxx        xxxxxx        xxxxxx        xxxxxx        xxxxxx       xxxxxx  &bt BT_CLR     &kp C_PREVIOUS     &kp C_NEXT        xxxxxx       xxxxxx  xxxxxx      xxxxxx      xxxxxx      xxxxxx  xxxxxx
                xxxxxx  xxxxxx        xxxxxx        xxxxxx        &macro_ver    xxxxxx                             xxxxxx         &kp C_VOLUME_UP                                   xxxxxx  xxxxxx      xxxxxx      xxxxxx      xxxxxx  xxxxxx
                xxxxxx  xxxxxx        xxxxxx        xxxxxx        xxxxxx                      xxxxxx       xxxxxx  xxxxxx         &kp C_VOLUME_DOWN  &kp C_PLAY_PAUSE  &kp C_MUTE           &bl BL_INC  &bl BL_DEC  &bl BL_TOG  xxxxxx  xxxxxx
            >;
        };
    };
};